/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ideastormsoftware.stopmotion;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.filechooser.FileSystemView;
import javax.swing.text.DefaultFormatter;

/**
 *
 * @author Phillip
 */
public class ControlForm extends javax.swing.JFrame {

    private final Camera camera;
    private final Preview preview;
    private File folder;
    private final JFileChooser fileChooser;
    int captureIndex = 0;

    /**
     * Creates new form ControlForm
     */
    public ControlForm() {
        initComponents();
        camera = new Camera();
        preview = new Preview(camera);
        previewPane.add(preview);
        fileChooser = new JFileChooser();
        FileSystemView fw = fileChooser.getFileSystemView();
        String datecode = new SimpleDateFormat("YYYY-MM-dd").format(new Date());
        folder = new File(fw.getDefaultDirectory().getAbsolutePath() + File.separator + "StopMotion" + File.separator + datecode);
        folder.mkdirs();
        JComponent comp = jSpinner1.getEditor();
        JFormattedTextField field = (JFormattedTextField) comp.getComponent(0);
        DefaultFormatter formatter = (DefaultFormatter) field.getFormatter();
        formatter.setCommitsOnValidEdit(true);
        jSpinner1.addChangeListener((ChangeEvent e) -> {
            camera.selectCamera(Integer.parseInt(jSpinner1.getValue().toString()));
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        previewPane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        folderEdit = new javax.swing.JTextField();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        captureButton = new javax.swing.JButton();
        playbackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        previewPane.setMaximumSize(new java.awt.Dimension(320, 240));
        previewPane.setMinimumSize(new java.awt.Dimension(320, 240));
        previewPane.setPreferredSize(new java.awt.Dimension(320, 240));

        javax.swing.GroupLayout previewPaneLayout = new javax.swing.GroupLayout(previewPane);
        previewPane.setLayout(previewPaneLayout);
        previewPaneLayout.setHorizontalGroup(
            previewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );
        previewPaneLayout.setVerticalGroup(
            previewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        jLabel1.setText("Scene Name");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));
        jSpinner1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSpinner1PropertyChange(evt);
            }
        });

        jLabel2.setText("Input Camera");

        captureButton.setText("Capture");
        captureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureButtonActionPerformed(evt);
            }
        });

        playbackButton.setText("Play Back");
        playbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playbackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(captureButton)
                    .addComponent(previewPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(folderEdit)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(110, 110, 110)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(playbackButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(folderEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(previewPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(captureButton)
                    .addComponent(playbackButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void captureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureButtonActionPerformed
        BufferedImage image = camera.getCurrentImage();
        if (image == null) {
            return;
        }
        preview.setLastImage(image);

        String projectName = folderEdit.getText().trim();

        if (folder.isDirectory() && !projectName.isEmpty()) {
            File projectFolder = new File(String.format("%s%s%s", folder.getAbsolutePath(), File.separator, projectName));
            projectFolder.mkdirs();
            String filename = String.format("%s%s%06d.png", projectFolder.getAbsolutePath(), File.separator, captureIndex++);
            try {
                ImageIO.write(image, "png", new File(filename));
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), ex.getClass().getName(), JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_captureButtonActionPerformed

    private void playbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playbackButtonActionPerformed
        String projectName = folderEdit.getText().trim();

        if (folder.isDirectory() && !projectName.isEmpty()) {
            String folderName = String.format("%s%s%s", folder.getAbsolutePath(), File.separator, projectName);
            JDialog playbackDialog = new JDialog();
            Playback playback = new Playback(new File(folderName));
            Preview playbackView = new Preview(playback);
            playbackDialog.add(playbackView);
            playbackDialog.setSize(640, 480);
            playbackDialog.setVisible(true);
            playback.start();
        }

    }//GEN-LAST:event_playbackButtonActionPerformed

    private void jSpinner1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jSpinner1PropertyChange
    }//GEN-LAST:event_jSpinner1PropertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton captureButton;
    private javax.swing.JTextField folderEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JButton playbackButton;
    private javax.swing.JPanel previewPane;
    // End of variables declaration//GEN-END:variables
}
